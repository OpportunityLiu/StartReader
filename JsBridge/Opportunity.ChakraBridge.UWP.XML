<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Opportunity.ChakraBridge.UWP</name>
    </assembly>
    <members>
        <member name="T:Opportunity.ChakraBridge.UWP.JsContext">
            <summary>
            A script context.
            </summary>
            <remarks>
            <para>
            Each script context contains its own global object, distinct from the global object in 
            other script contexts.
            </para>
            <para>
            Many Chakra hosting APIs require an "active" script context, which can be set using 
            Current. Chakra hosting APIs that require a current context to be set will note 
            that explicitly in their documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContext.Runtime">
            <summary>
            Gets the runtime that the context belongs to.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContext.IsValid">
            <summary>
            Gets a value indicating whether the context is a valid context or not.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.Equals(Opportunity.ChakraBridge.UWP.JsContext)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.Get(Opportunity.ChakraBridge.UWP.JsContextRef)">
            <summary>
            Get the instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsContext" />, or <see langword="null" />, if <paramref name="reference" /> is <see cref="P:Opportunity.ChakraBridge.UWP.JsContextRef.Invalid" />. 
            </summary>
            <param name="reference">The reference.</param>
            <returns>The instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsContext" /></returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.Finalize">
            <summary>
            Releases reference to the script context.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContext.Data">
            <summary>
            The internal data set on <see cref="T:Opportunity.ChakraBridge.UWP.JsContext" />. 
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.ParseScript(System.String)">
            <summary>
            Parses a script and returns a <c>Function</c> representing the script.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="script">The script to parse.</param>
            <returns>A <c>Function</c> representing the script code.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.ParseScript(System.Byte[])">
            <summary>
            Parses a serialized script and returns a <c>Function</c> representing the script.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="buffer">The serialized script.</param>
            <returns>A <c>Function</c> representing the script code.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.RunScript(System.String)">
            <summary>
            Executes a script.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="script">The script to run.</param>
            <returns>The result of the script, if any.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.RunScript(System.Byte[])">
            <summary>
            Runs a serialized script.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="buffer">The serialized script.</param>
            <returns>The result of the script, if any.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.SerializeScript(System.String)">
            <summary>
            Serializes a parsed script to a buffer than can be reused.
            </summary>
            <remarks>
            <para>
            SerializeScript parses a script and then stores the parsed form of the script in a 
            runtime-independent format. The serialized script then can be deserialized in any
            runtime without requiring the script to be re-parsed.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="script">The script to serialize.</param>
            <returns>
            The size of the buffer, in bytes, required to hold the serialized script.
            </returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.ParseScript(System.String,System.Byte[],Opportunity.ChakraBridge.UWP.JsSourceContext,System.String)">
            <summary>
            Parses a serialized script and returns a <c>Function</c> representing the script.
            </summary>
            <param name="script">The script to parse.</param>
            <param name="buffer">The serialized script.</param>
            <param name="sourceContext">
            A cookie identifying the script that can be used by script contexts that have debugging enabled.
            </param>
            <param name="sourceName">The location the script came from.</param>
            <returns>A <c>Function</c> representing the script code.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.ParseScript(System.String,Opportunity.ChakraBridge.UWP.JsSourceContext,System.String)">
            <summary>
            Parses a script and returns a <c>Function</c> representing the script.
            </summary>
            <param name="script">The script to parse.</param>
            <param name="sourceContext">
            A cookie identifying the script that can be used by script contexts that have debugging enabled.
            </param>
            <param name="sourceName">The location the script came from.</param>
            <returns>A <c>Function</c> representing the script code.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.ParseScript(Opportunity.ChakraBridge.UWP.JsSerializedScriptLoadSourceCallbackPtr,Opportunity.ChakraBridge.UWP.JsSerializedScriptUnloadCallbackPtr,System.Byte[],Opportunity.ChakraBridge.UWP.JsSourceContext,System.String)">
            <summary>
            Parses a serialized script and returns a function representing the script.
            Provides the ability to lazy load the script source only if/when it is needed. 
            </summary>
            <param name="scriptLoadCallback">Callback called when the source code of the script needs to be loaded. </param>
            <param name="scriptUnloadCallback">Callback called when the serialized script and source code are no longer needed. </param>
            <param name="buffer">The serialized script. </param>
            <param name="sourceContext">
            A cookie identifying the script that can be used by debuggable script contexts. 
            This context will passed into scriptLoadCallback and scriptUnloadCallback. 
            </param>
            <param name="sourceUrl">The location the script came from. </param>
            <returns>A function representing the script code. </returns>
            <remarks>
            <para>
            Requires an active script context. 
            </para>
            <para>
            The runtime will hold on to the buffer until all instances of any functions created from the buffer are garbage collected.
            It will then call scriptUnloadCallback to inform the caller that it is safe to release.
            </para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.RunScript(Opportunity.ChakraBridge.UWP.JsSerializedScriptLoadSourceCallbackPtr,Opportunity.ChakraBridge.UWP.JsSerializedScriptUnloadCallbackPtr,System.Byte[],Opportunity.ChakraBridge.UWP.JsSourceContext,System.String)">
            <summary>
            Runs a serialized script.
            Provides the ability to lazy load the script source only if/when it is needed.
            </summary>
            <param name="scriptLoadCallback">Callback called when the source code of the script needs to be loaded. </param>
            <param name="scriptUnloadCallback">Callback called when the serialized script and source code are no longer needed. </param>
            <param name="buffer">The serialized script. </param>
            <param name="sourceContext">
            A cookie identifying the script that can be used by debuggable script contexts. 
            This context will passed into scriptLoadCallback and scriptUnloadCallback. 
            </param>
            <param name="sourceUrl">The location the script came from. </param>
            <returns>The result of running the script, if any. This parameter can be null. </returns>
            <remarks>
            <para>
            Requires an active script context. 
            </para>
            <para>
            The runtime will hold on to the buffer until all instances of any functions created from the buffer are garbage collected.
            It will then call scriptUnloadCallback to inform the caller that it is safe to release.
            </para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.RunScript(System.String,System.Byte[],Opportunity.ChakraBridge.UWP.JsSourceContext,System.String)">
            <summary>
            Runs a serialized script.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="script">The source code of the serialized script.</param>
            <param name="buffer">The serialized script.</param>
            <param name="sourceContext">
            A cookie identifying the script that can be used by script contexts that have debugging enabled.
            </param>
            <param name="sourceName">The location the script came from.</param>
            <returns>The result of the script, if any.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.RunScript(System.String,Opportunity.ChakraBridge.UWP.JsSourceContext,System.String)">
            <summary>
            Executes a script.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="script">The script to run.</param>
            <param name="sourceContext">
            A cookie identifying the script that can be used by script contexts that have debugging enabled.
            </param>
            <param name="sourceName">The location the script came from.</param>
            <returns>The result of the script, if any.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContext.Current">
            <summary>
            Gets or sets the current script context on the thread.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContext.HasException">
            <summary>
            Gets a value indicating whether the runtime of the current context is in an exception state.
            </summary>
            <remarks>
            <para>
            If a call into the runtime results in an exception (either as the result of running a 
            script or due to something like a conversion failure), the runtime is placed into an 
            "exception state." All calls into any context created by the runtime (except for the 
            exception APIs) will fail with <c>InExceptionState</c> until the exception is 
            cleared.
            </para>
            <para>
            If the runtime of the current context is in the exception state when a callback returns 
            into the engine, the engine will automatically rethrow the exception.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.StartDebugging">
            <summary>
            Starts debugging in the current context. 
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.Idle">
            <summary>
            Tells the runtime to do any idle processing it need to do.
            </summary>
            <remarks>
            <para>
            If idle processing has been enabled for the current runtime, calling <c>Idle</c> will 
            inform the current runtime that the host is idle and that the runtime can perform 
            memory cleanup tasks.
            </para>
            <para>
            <c>Idle</c> will also return the number of system ticks until there will be more idle work
            for the runtime to do. Calling <c>Idle</c> before this number of ticks has passed will do
            no work.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <returns>
            The next system tick when there will be more idle work to do. Returns the 
            maximum number of ticks if there no upcoming idle work to do.
            </returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.SetException(Opportunity.ChakraBridge.UWP.JsError)">
            <summary>
            Sets the runtime of the current context to an exception state.
            </summary>
            <remarks>
            <para>
            If the runtime of the current context is already in an exception state, this API will 
            throw <c>JsErrorInExceptionState</c>.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="exception">
            The JavaScript exception to set for the runtime of the current context.
            </param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContext.ProjectWinRTNamespace(System.String)">
            <summary>
            Project a WinRT namespace. 
            </summary>
            <param name="namespaceName">The WinRT namespace to be projected. </param>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsPromiseContinuationCallbackPtr">
            <summary>s
            A promise continuation callback.
            </summary>
            <remarks>
            The host can specify a promise continuation callback in <c>JsSetPromiseContinuationCallback</c>. If
            a script creates a task to be run later, then the promise continuation callback will be called with
            the task and the task should be put in a FIFO queue, to be run when the current script is
            done executing.
            </remarks>
            <param name="task">The task, represented as a JavaScript function.</param>
            <param name="callbackState">The data argument to be passed to the callback.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsContextRef">
            <summary>
            The reference of a script context.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContextRef.Runtime">
            <summary>
            Gets the runtime that the context belongs to.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContextRef.GetData(System.Object@)">
            <summary>
            Gets the internal data set on <see cref="T:Opportunity.ChakraBridge.UWP.JsContextRef" />. 
            </summary>
            <remarks>Requires an active script context. </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContextRef.SetData(System.Object)">
            <summary>
            Sets the internal data of <see cref="T:Opportunity.ChakraBridge.UWP.JsContextRef" />. 
            </summary>
            <remarks>Requires an active script context. </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContextRef.IsValid">
            <summary>
            Gets a value indicating whether the value is valid.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContextRef.IsRuntimeValid">
            <summary>
            Gets a value indicating whether the value is useable.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContextRef.AddRef">
            <summary>
            Add reference to the script context.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContextRef.Release">
            <summary>
            Releases reference to the script context.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsContextRef.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsContextRef" /> struct. 
            </summary>
            <param name="reference">The reference.</param>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContextRef.Current">
            <summary>
            Gets or sets the current script context on the thread.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsContextRef.Invalid">
            <summary>
            Gets an invalid value.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsSerializedScriptUnloadCallbackPtr">
            <summary>
            Called by the runtime when it is finished with all resources related to the script execution.
            The caller should free the source if loaded, the byte code, and the context at this time.
            </summary>
            <param name="sourceContext">The context passed to Js[Parse|Run]SerializedScriptWithCallback</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsSerializedScriptLoadSourceCallbackPtr">
            <summary>
            Called by the runtime to load the source code of the serialized script.
            The caller must keep the script buffer valid until the JsSerializedScriptUnloadCallback.
            </summary>
            <param name="sourceContext">The context passed to Js[Parse|Run]SerializedScriptWithCallback</param>
            <param name="scriptBuffer">The script returned.</param>
            <returns>
            true if the operation succeeded, false otherwise.
            </returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Helpers.ThrowIfError(Opportunity.ChakraBridge.UWP.JsErrorCode)">
            <summary>
            Throws if a native method returns an error code.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsEngineException">
            <summary>
            An exception that occurred in the workings of the JavaScript engine itself.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsEngineException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsEngineException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsEngineException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsEngineException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsEngineException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsEngineException" /> class.
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The exception caused this exception.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsErrorCode">
            <summary>
            An error code returned from a Chakra hosting API.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.NoError">
            <summary>
            Success error code.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CategoryUsage">
            <summary>
            Category of errors that relates to incorrect usage of the API itself.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument">
            <summary>
            An argument to a hosting API was invalid.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.NullArgument">
            <summary>
            An argument to a hosting API was null in a context where null is not allowed.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.NoCurrentContext">
            <summary>
            The hosting API requires that a context be current, but there is no current context.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InExceptionState">
            <summary>
            The engine is in an exception state and no APIs can be called until the exception is
            cleared.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.NotImplemented">
            <summary>
            A hosting API is not yet implemented.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.WrongThread">
            <summary>
            A hosting API was called on the wrong thread.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.RuntimeInUse">
            <summary>
            A runtime that is still in use cannot be disposed.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.BadSerializedScript">
            <summary>
            A bad serialized script was used, or the serialized script was serialized by a
            different version of the Chakra engine.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InDisabledState">
            <summary>
            The runtime is in a disabled state.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CannotDisableExecution">
            <summary>
            Runtime does not support reliable script interruption.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.HeapEnumInProgress">
            <summary>
            A heap enumeration is currently underway in the script context.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.ArgumentNotObject">
            <summary>
            A hosting API that operates on object values was called with a non-object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InProfileCallback">
            <summary>
            A script context is in the middle of a profile callback.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InThreadServiceCallback">
            <summary>
            A thread service callback is currently underway.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CannotSerializeDebugScript">
            <summary>
            Scripts cannot be serialized in debug contexts.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.AlreadyDebuggingContext">
            <summary>
            The context cannot be put into a debug state because it is already in a debug state.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.AlreadyProfilingContext">
            <summary>
            The context cannot start profiling because it is already profiling.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.IdleNotEnabled">
            <summary>
            Idle notification given when the host did not enable idle processing.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CannotSetProjectionEnqueueCallback">
            <summary>
            The context did not accept the enqueue callback.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CannotStartProjection">
            <summary>
            Failed to start projection.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InObjectBeforeCollectCallback">
            <summary>
            The operation is not supported in an object before collect callback.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.ObjectNotInspectable">
            <summary>
            Object cannot be unwrapped to IInspectable pointer.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.PropertyNotSymbol">
            <summary>
            A hosting API that operates on symbol property ids but was called with a non-symbol property id.
            The error code is returned by JsGetSymbolFromPropertyId if the function is called with non-symbol property id.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.PropertyNotString">
            <summary>
            A hosting API that operates on string property ids but was called with a non-string property id.
            The error code is returned by existing JsGetPropertyNamefromId if the function is called with non-string property id.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CategoryEngine">
            <summary>
            Category of errors that relates to errors occurring within the engine itself.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.OutOfMemory">
            <summary>
            The Chakra engine has run out of memory.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CategoryScript">
            <summary>
            Category of errors that relates to errors in a script.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.ScriptException">
            <summary>
            A JavaScript exception occurred while running a script.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.ScriptCompile">
            <summary>
            JavaScript failed to compile.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.ScriptTerminated">
            <summary>
            A script was terminated due to a request to suspend a runtime.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.ScriptEvalDisabled">
            <summary>
            A script was terminated because it tried to use <c>eval</c> or <c>function</c> and eval
            was disabled.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.CategoryFatal">
            <summary>
            Category of errors that are fatal and signify failure of the engine.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.Fatal">
            <summary>
            A fatal error in the engine has occurred.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsErrorCode.WrongRuntime">
            <summary>
            A hosting API was called with object created on different javascript runtime.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsException">
            <summary>
            An exception returned from the Chakra engine.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The exception caused this exception.</param>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsException.ErrorCode">
            <summary>
            The error code.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsFatalException">
            <summary>
            A fatal exception occurred.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFatalException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsFatalException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFatalException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsFatalException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFatalException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsFatalException" /> class.
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The exception caused this exception.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsPropertyId">
            <summary>
            A property identifier.
            </summary>
            <remarks>
            Property identifiers are used to refer to properties of JavaScript objects instead of using
            strings.
            </remarks>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsPropertyId.Reference">
            <summary>
            The id.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsPropertyId.IsValid">
            <summary>
            Wheteher the value is vaild reference.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.#ctor(Opportunity.ChakraBridge.UWP.JsPropertyIdRef)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsPropertyId" /> struct. 
            </summary>
            <param name="id">The ID.</param>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsPropertyId.Invalid">
            <summary>
            Gets an invalid ID.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsPropertyId.Name">
            <summary>
            Gets the name associated with the property ID.
            </summary>
            <remarks>
            <para>
            Requires an active script context.
            </para>
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsPropertyId.Symbol">
            <summary>
            Gets the symbol associated with the property ID. 
            </summary>
            <remarks>
            <para>
            Requires an active script context.
            </para>
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsPropertyId.IdType">
            <summary>
            Gets the type of the property ID.
            </summary>
            <remarks>
            <para>
            Requires an active script context.
            </para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.FromString(System.String)">
            <summary>
            Gets the property ID associated with the name. 
            </summary>
            <remarks>
            <para>
            Property IDs are specific to a context and cannot be used across contexts.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="name">
            The name of the property ID to get or create. The name may consist of only digits.
            </param>
            <returns>The property ID in this runtime for the given name.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.op_Implicit(System.String)~Opportunity.ChakraBridge.UWP.JsPropertyId">
            <summary>
            Gets the property ID associated with the name. 
            </summary>
            <remarks>
            <para>
            Property IDs are specific to a context and cannot be used across contexts.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="name">
            The name of the property ID to get or create. The name may consist of only digits.
            </param>
            <returns>The property ID in this runtime for the given name.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.FromSymbol(Opportunity.ChakraBridge.UWP.JsSymbol)">
            <summary>
            Gets the property ID associated with the symbol. 
            </summary>
            <remarks>
            <para>
            Property IDs are specific to a context and cannot be used across contexts.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="symbol">The symbol whose property ID is being retrieved. </param>
            <returns>The property ID for the given symbol. </returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.op_Implicit(Opportunity.ChakraBridge.UWP.JsSymbol)~Opportunity.ChakraBridge.UWP.JsPropertyId">
            <summary>
            Gets the property ID associated with the symbol. 
            </summary>
            <remarks>
            <para>
            Property IDs are specific to a context and cannot be used across contexts.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="symbol">The symbol whose property ID is being retrieved. </param>
            <returns>The property ID for the given symbol. </returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.op_Equality(Opportunity.ChakraBridge.UWP.JsPropertyId,Opportunity.ChakraBridge.UWP.JsPropertyId)">
            <summary>
            The equality operator for property IDs.
            </summary>
            <param name="left">The first property ID to compare.</param>
            <param name="right">The second property ID to compare.</param>
            <returns>Whether the two property IDs are the same.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.op_Inequality(Opportunity.ChakraBridge.UWP.JsPropertyId,Opportunity.ChakraBridge.UWP.JsPropertyId)">
            <summary>
            The inequality operator for property IDs.
            </summary>
            <param name="left">The first property ID to compare.</param>
            <param name="right">The second property ID to compare.</param>
            <returns>Whether the two property IDs are not the same.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.Equals(Opportunity.ChakraBridge.UWP.JsPropertyId)">
            <summary>
            Checks for equality between property IDs.
            </summary>
            <param name="other">The other property ID to compare.</param>
            <returns>Whether the two property IDs are the same.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.Equals(System.Object)">
            <summary>
            Invailid operation.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.GetHashCode">
            <summary>
            The hash code.
            </summary>
            <returns>The hash code of the property ID.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsPropertyId.ToString">
            <summary>
            Converts the property ID to a string.
            </summary>
            <returns>The name or symbol of the property ID.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsRuntime">
            <summary>
            A Chakra runtime.
            </summary>
            <remarks>
            <para>
            Each Chakra runtime has its own independent execution engine, JIT compiler, and garbage 
            collected heap. As such, each runtime is completely isolated from other runtimes.
            </para>
            <para>
            Runtimes can be used on any thread, but only one thread can call into a runtime at any 
            time.
            </para>
            <para>
            NOTE: A JsRuntime, unlike other objects in the Chakra hosting API, is not 
            garbage collected since it contains the garbage collected heap itself. A runtime will 
            continue to exist until Dispose is called.
            </para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.CollectGarbage">
            <summary>
            Performs a full garbage collection.
            </summary>
        </member>
        <member name="E:Opportunity.ChakraBridge.UWP.JsRuntime.CollectingGarbage">
            <summary>
            Raises before gabage collection.
            </summary>
        </member>
        <member name="E:Opportunity.ChakraBridge.UWP.JsRuntime.MemoryEvent">
            <summary>
            Raises when the charka engine allocating or freeing memories.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.CreateContext">
            <summary>
            Creates a script context for running scripts.
            </summary>
            <remarks>
            Each script context has its own global object that is isolated from all other script 
            contexts.
            </remarks>
            <returns>The created script context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.ClearContexts">
            <summary>
            Clear <see cref="F:Opportunity.ChakraBridge.UWP.JsRuntime.Contexts" /> and set it to <see langword="null" />.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.GetContexts">
            <summary>
            Gets created contexts.
            </summary>
            <returns>Collection of contexts.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.GetRuntimes">
            <summary>
            Gets created runtimes.
            </summary>
            <returns>Collection of runtimes.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.#ctor(Opportunity.ChakraBridge.UWP.JsRuntimeHandle)">
            <summary>
            Create JsRuntime with initialized handle.
            </summary>
            <param name="handle">The handle.</param>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntime.Handle">
            <summary>
            The handle.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.Equals(Opportunity.ChakraBridge.UWP.JsRuntime)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.Create(Opportunity.ChakraBridge.UWP.JsRuntimeAttributes)">
            <summary>
            Creates a new runtime.
            </summary>
            <param name="attributes">The attributes of the runtime to be created.</param>
            <returns>The runtime created.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.Create">
            <summary>
            Creates a new runtime.
            </summary>
            <returns>The runtime created.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsRuntime.MemoryUsage">
            <summary>
            Gets the current memory usage for a runtime.
            </summary>
            <remarks>
            Memory usage can be always be retrieved, regardless of whether or not the runtime is active
            on another thread.
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsRuntime.MemoryLimit">
            <summary>
            Gets or sets the current memory limit for a runtime.
            </summary>
            <remarks>
            The memory limit of a runtime can be always be retrieved, regardless of whether or not the 
            runtime is active on another thread.
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsRuntime.IsEnabled">
            <summary>
            Gets or sets a value indicating whether script execution is enabled in the runtime.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.Finalize">
            <summary>
            Disposes a runtime.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsRuntime.Dispose">
            <summary>
            Disposes a runtime.
            </summary>
            <remarks>
            Once a runtime has been disposed, all resources owned by it are invalid and cannot be used.
            If the runtime is active (i.e. it is set to be current on a particular thread), it cannot 
            be disposed.
            </remarks>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsCollectingGarbageEventHandler">
            <summary>
            Event handler of <see cref="E:Opportunity.ChakraBridge.UWP.JsRuntime.CollectingGarbage" />.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsBeforeCollectCallbackPtr">
            <summary>
            A callback called before collection.
            </summary>
            <param name="callbackState">The state passed to SetBeforeCollectCallback.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsMemoryAllocationCallbackPtr">
            <summary>
            User implemented callback routine for memory allocation events
            </summary>
            <param name="callbackState">The state passed to SetRuntimeMemoryAllocationCallback.</param>
            <param name="allocationEvent">The type of type allocation event.</param>
            <param name="allocationSize">The size of the allocation.</param>
            <returns>
            For the Allocate event, returning true allows the runtime to continue with 
            allocation. Returning false indicates the allocation request is rejected. The return value
            is ignored for other allocation events.
            </returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsMemoryEventHandler">
            <summary>
            Event handler for <see cref="E:Opportunity.ChakraBridge.UWP.JsRuntime.MemoryEvent" />.
            </summary>
            <param name="sender">The <see cref="T:Opportunity.ChakraBridge.UWP.JsRuntime" /> raises the event.</param>
            <param name="args">Args of the event.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsMemoryEventType">
            <summary>
            Allocation callback event type.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsMemoryEventType.Allocate">
            <summary>
            Indicates a request for memory allocation.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsMemoryEventType.Free">
            <summary>
            Indicates a memory freeing event.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsMemoryEventType.Failure">
            <summary>
            Indicates a failed allocation event.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsMemoryEventArgs">
            <summary>
            Event args of <see cref="E:Opportunity.ChakraBridge.UWP.JsRuntime.MemoryEvent" />.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsMemoryEventArgs.EventType">
            <summary>
            The type of type allocation event.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsMemoryEventArgs.AllocationSize">
            <summary>
            The size of the allocation.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsMemoryEventArgs.IsRejected">
            <summary>
            For the Allocate event, <see langword="false" /> allows the runtime to continue with allocation. 
            <see langword="true" /> indicates the allocation request is rejected. 
            The value is ignored for other allocation events.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsSourceContext">
            <summary>
            A cookie that identifies a script for debugging purposes.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsSourceContext.Value">
            <summary>
            The context.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsSourceContextExtension">
            <summary>
            Extension methods for <see cref="T:Opportunity.ChakraBridge.UWP.JsSourceContext" />.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.None">
            <summary>
            Gets an empty source context.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.Subtract(Opportunity.ChakraBridge.UWP.JsSourceContext,System.Int32)">
            <summary>
            Subtracts an offset from the value of the source context.
            </summary>
            <param name="left">The source context to subtract the offset from.</param>
            <param name="right">The offset to subtract.</param>
            <returns>A new source context that reflects the subtraction of the offset from the context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.Decrement(Opportunity.ChakraBridge.UWP.JsSourceContext)">
            <summary>
            Decrements the value of the source context.
            </summary>
            <param name="left">The source context to decrement.</param>
            <returns>A new source context that reflects the decrementing of the context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.Add(Opportunity.ChakraBridge.UWP.JsSourceContext,System.Int32)">
            <summary>
            Adds an offset from the value of the source context.
            </summary>
            <param name="left">The source context to add the offset to.</param>
            <param name="right">The offset to add.</param>
            <returns>A new source context that reflects the addition of the offset to the context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.Increment(Opportunity.ChakraBridge.UWP.JsSourceContext)">
            <summary>
            Increments the value of the source context.
            </summary>
            <param name="left">The source context to increment.</param>
            <returns>A new source context that reflects the incrementing of the context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.FromUInt64(System.UInt64)">
            <summary>
            Creates a new source context. 
            </summary>
            <param name="cookie">
            The cookie for the source context.
            </param>
            <returns>The new source context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSourceContextExtension.Equals(Opportunity.ChakraBridge.UWP.JsSourceContext,Opportunity.ChakraBridge.UWP.JsSourceContext)">
            <summary>
            Checks for equality between source contexts.
            </summary>
            <returns>Whether the two source contexts are the same.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsInt8Array">
            <summary>
            A Javascript Int8Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt8Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt8Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt8Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt8Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.IndexOf(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Contains(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.CopyTo(System.Byte[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Insert(System.Int32,System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Add(System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt8Array.Remove(System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsUint8Array">
            <summary>
            A Javascript Uint8Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint8Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint8Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint8Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.IndexOf(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Contains(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.CopyTo(System.Byte[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Insert(System.Int32,System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Add(System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8Array.Remove(System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray">
            <summary>
            A Javascript Uint8ClampedArray.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.IndexOf(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Contains(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.CopyTo(System.Byte[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Insert(System.Int32,System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Add(System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint8ClampedArray.Remove(System.Byte)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsInt16Array">
            <summary>
            A Javascript Int16Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt16Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt16Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt16Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt16Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.IndexOf(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Contains(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.CopyTo(System.Int16[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Insert(System.Int32,System.Int16)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Add(System.Int16)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt16Array.Remove(System.Int16)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsUint16Array">
            <summary>
            A Javascript Uint16Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint16Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint16Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint16Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint16Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.IndexOf(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Contains(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.CopyTo(System.UInt16[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Insert(System.Int32,System.UInt16)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Add(System.UInt16)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint16Array.Remove(System.UInt16)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsInt32Array">
            <summary>
            A Javascript Int32Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsInt32Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt32Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt32Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsInt32Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.IndexOf(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Contains(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.CopyTo(System.Int32[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Insert(System.Int32,System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Add(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsInt32Array.Remove(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsUint32Array">
            <summary>
            A Javascript Uint32Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsUint32Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint32Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint32Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsUint32Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.IndexOf(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Contains(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.CopyTo(System.UInt32[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Insert(System.Int32,System.UInt32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Add(System.UInt32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUint32Array.Remove(System.UInt32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsFloat32Array">
            <summary>
            A Javascript Float32Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat32Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsFloat32Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsFloat32Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsFloat32Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.IndexOf(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Contains(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.CopyTo(System.Single[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Insert(System.Int32,System.Single)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Add(System.Single)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat32Array.Remove(System.Single)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsFloat64Array">
            <summary>
            A Javascript Float64Array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Create">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.
            </summary>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Create(System.Int32)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.
            </summary>
            <param name="length">Length of array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Create(Opportunity.ChakraBridge.UWP.JsTypedArray)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.
            </summary>
            <param name="typedArray">The array to copy values into the new array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Create(Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Create new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.
            </summary>
            <param name="obj">The <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" /> to convert to array.</param>
            <returns>A new instance of <see cref="T:Opportunity.ChakraBridge.UWP.JsFloat64Array" />.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsFloat64Array.BytesPerElement">
            <summary>
            Returns a number value of the element size for the different typed array objects.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsFloat64Array.Count">
            <summary>
            Count of elements in the array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsFloat64Array.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.IndexOf(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Contains(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.CopyTo(System.Double[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.ToArray">
            <summary>
            Copy data of this array to a new array.
            </summary>
            <returns>A copy of this array.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Insert(System.Int32,System.Double)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.RemoveAt(System.Int32)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Add(System.Double)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Clear">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFloat64Array.Remove(System.Double)">
            <summary>Invalid operation.</summary>
            <exception href="InvalidOperationException">The array is fixed size.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsArray">
            <summary>
            A JavaScript array value.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.Create(System.Int32)">
            <summary>
            Creates a JavaScript array object.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="length">The initial length of the array.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns>A JavaScript array object.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsArray.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsArray.Count">
            <summary>
            Gets <c>length</c> property of the array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.Add(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Invokes <c>push</c> method of the array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.Clear">
            <summary>
            Sets <c>length</c> property of the array to <c>0</c>.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.Contains(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Invokes <c>indexOf</c> method of the array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.IndexOf(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Invokes <c>indexOf</c> method of the array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.CopyTo(Opportunity.ChakraBridge.UWP.JsValue[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.Insert(System.Int32,Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Invokes <c>splice</c> method of the array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.Remove(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Invokes <c>indexOf</c> and <c>splice</c> method of the array.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsArray.RemoveAt(System.Int32)">
            <summary>
            Invokes <c>splice</c> method of the array.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsBoolean">
            <summary>
            A JavaScript boolean value.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsBoolean.Value">
            <summary>
            Retrieves the <see cref="T:System.Boolean" /> value of a <see cref="T:Opportunity.ChakraBridge.UWP.JsBoolean" /> value. 
            </summary>
            <returns>The converted value. </returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsBoolean.FromBoolean(System.Boolean)">
            <summary>
            Creates a <see cref="T:Opportunity.ChakraBridge.UWP.JsBoolean" /> value from a <see cref="T:System.Boolean" /> value.
            </summary>
            <param name="booleanValue">The value to be converted.</param>
            <returns>The converted value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsBoolean.ToString">
            <summary>
            Convert the <see cref="T:Opportunity.ChakraBridge.UWP.JsBoolean" /> to its string representaion.
            </summary>
            <returns>A <see cref="T:System.String" /> represent the value of <see cref="T:Opportunity.ChakraBridge.UWP.JsBoolean" />.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsError">
            <summary>
            A JavaScript error object.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsError.Message">
            <summary>
            <c>message</c> property of Error.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsError.Name">
            <summary>
            <c>name</c> property of Error.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateError(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Creates a new JavaScript error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateError(System.String)">
            <summary>
            Creates a new JavaScript error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateRangeError(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Creates a new JavaScript RangeError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateRangeError(System.String)">
            <summary>
            Creates a new JavaScript RangeError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateReferenceError(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Creates a new JavaScript ReferenceError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateReferenceError(System.String)">
            <summary>
            Creates a new JavaScript ReferenceError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateSyntaxError(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Creates a new JavaScript SyntaxError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateSyntaxError(System.String)">
            <summary>
            Creates a new JavaScript SyntaxError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateTypeError(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Creates a new JavaScript TypeError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateTypeError(System.String)">
            <summary>
            Creates a new JavaScript TypeError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateUriError(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Creates a new JavaScript URIError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsError.CreateUriError(System.String)">
            <summary>
            Creates a new JavaScript URIError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsExtenalObject">
            <summary>
             A JavaScript object that stores some external data.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsExtenalObject.Create(System.Object)">
            <summary>
            Creates a new <see cref="T:Opportunity.ChakraBridge.UWP.JsExtenalObject" /> that stores some external data.
            </summary>
            <param name="data">External data that the object will represent. May be null.</param>
            <returns>A new <see cref="T:Opportunity.ChakraBridge.UWP.JsExtenalObject" /> that stores some external data.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsExtenalObject.ExternalData">
            <summary>
            Gets or sets the data in an external object.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsNativeFunctionPtr">
            <summary>
            A function callback.
            </summary>
            <param name="callee">
            A <c>Function</c> object that represents the function being invoked.
            </param>
            <param name="isConstructCall">Indicates whether this is a regular call or a 'new' call.</param>
            <param name="arguments">The arguments to the call.</param>
            <param name="argumentCount">The number of arguments.</param>
            <param name="callbackData">Callback data, if any.</param>
            <returns>The result of the call, if any.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsNativeFunction">
            <summary>
            A function callback.
            </summary>
            <param name="callee">
            A <c>Function</c> object that represents the function being invoked.
            </param>
            <param name="isConstructCall">Indicates whether this is a regular call or a 'new' call.</param>
            <param name="arguments">The arguments to the call.</param>
            <returns>The result of the call, if any.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsFunction">
            <summary>
            A JavaScript function object.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFunction.Create(Opportunity.ChakraBridge.UWP.JsNativeFunction)">
            <summary>
            Creates a new JavaScript function.
            </summary>
            <param name="function">The method to call when the function is invoked.</param>
            <returns>A new JavaScript function.</returns>
            <remarks>Requires an active script context.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="function" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFunction.Create(Opportunity.ChakraBridge.UWP.JsNativeFunction,Opportunity.ChakraBridge.UWP.JsString)">
            <summary>
            Creates a new JavaScript function.
            </summary>
            <param name="function">The method to call when the function is invoked.</param>
            <param name="name">The name of this function that will be used for diagnostics and stringification purposes. </param>
            <returns>A new JavaScript function.</returns>
            <remarks>Requires an active script context.</remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="function" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFunction.Invoke(Opportunity.ChakraBridge.UWP.JsValue,Opportunity.ChakraBridge.UWP.JsValue[])">
            <summary>
            Invokes a function.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="caller">The caller of function.</param>
            <param name="arguments">The arguments to the call.</param>
            <returns>The <c>Value</c> returned from the function invocation, if any.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsFunction.New(Opportunity.ChakraBridge.UWP.JsValue[])">
            <summary>
            Invokes a function as a constructor.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="arguments">The arguments to the call.</param>
            <returns>The <c>Value</c> returned from the function invocation.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsNull">
            <summary>
            A JavaScript null value.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsNull.ToString">
            <summary>
            Returns <c>"null"</c>.
            </summary>
            <returns><c>"null"</c></returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsNumber">
            <summary>
            A JavaScript number value.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsNumber.ToInt32">
            <summary>
            Retrieves the <see cref="T:System.Int32" /> value of a number value.
            </summary>
            <returns>The <see cref="T:System.Int32" /> value.</returns>
            <remarks>
            This function retrieves the value of a number value and converts to an <see cref="T:System.Int32" /> value.
            It will fail with <see cref="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument" /> if the type of the value is not number.
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsNumber.Value">
            <summary>
            Retrieves the <see cref="T:System.Double" /> value of a number value.
            </summary>
            <returns>The <see cref="T:System.Double" /> value.</returns>
            <remarks>
            This function retrieves the value of a number value. It will fail with
            <see cref="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument" /> if the type of the value is not number.
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsNumber.FromDouble(System.Double)">
            <summary>
            Creates a <see cref="T:Opportunity.ChakraBridge.UWP.JsNumber" /> value from a <see cref="T:System.Double" /> value.
            </summary>
            <param name="doubleValue">The value to be converted.</param>
            <returns>The new <see cref="T:Opportunity.ChakraBridge.UWP.JsNumber" /> value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsNumber.FromInt32(System.Int32)">
            <summary>
            Creates a <see cref="T:Opportunity.ChakraBridge.UWP.JsNumber" /> value from a <see cref="T:System.Int32" /> value.
            </summary>
            <param name="int32Value">The value to be converted.</param>
            <returns>The new <see cref="T:Opportunity.ChakraBridge.UWP.JsNumber" /> value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsNumber.ToString">
            <summary>
            Convert the <see cref="T:Opportunity.ChakraBridge.UWP.JsNumber" /> to its string representaion.
            </summary>
            <returns>A <see cref="T:System.String" /> represent the value of <see cref="T:Opportunity.ChakraBridge.UWP.JsNumber" />.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsObject">
            <summary>
            A JavaScript object.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Create">
            <summary>
            Creates a new <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" />.
            </summary>
            <returns>A new <see cref="T:Opportunity.ChakraBridge.UWP.JsObject" />.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsObject.Prototype">
            <summary>
            Gets or sets the prototype of an object, use <see langword="null" /> instead of <see cref="T:Opportunity.ChakraBridge.UWP.JsNull" />.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.PreventExtension">
            <summary>
            Sets an object to not be extensible.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsObject.IsExtensionAllowed">
            <summary>
            Gets a value indicating whether an object is extensible or not.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.InstanceOf(Opportunity.ChakraBridge.UWP.JsFunction)">
            <summary>
            Performs JavaScript "instanceof" operator test. 
            </summary>
            <param name="constructor">The constructor function to test against. </param>
            <returns>Whether the "object instanceof constructor" is <see langword="true" />. </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="constructor" /> is <see langword="null" />.</exception>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsObject.ObjectCollectingCallback">
            <summary>
            A callback function that is called by the runtime before garbage collection of the object. 
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.ToString">
            <summary>
            Converts the value to string using standard JavaScript semantics. 
            </summary>
            <remarks>Requires an active script context. </remarks>
            <returns>The string.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Contains(System.String)">
            <summary>
            Determines whether an object has a property.
            </summary>
            <param name="id">The ID of the property.</param>
            <returns>Whether the object (or a prototype) has the property.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Contains(Opportunity.ChakraBridge.UWP.JsSymbol)">
            <summary>
            Determines whether an object has a property.
            </summary>
            <param name="id">The ID of the property.</param>
            <returns>Whether the object (or a prototype) has the property.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.ContainsAt(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Test if an object has a value at the specified index.
            </summary>
            <param name="index">The index to test.</param>
            <returns>Whether the object has an value at the specified index.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="index" /> is <see langword="null" />.</exception>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Get(System.String)">
            <summary>
            Gets an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <returns>The value of the property.</returns>
            <remarks>
            <para>Requires an active script context.</para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Get(Opportunity.ChakraBridge.UWP.JsSymbol)">
            <summary>
            Gets an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <returns>The value of the property.</returns>
            <remarks>
            <para>Requires an active script context.</para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Set(System.String,Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Sets an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="value">The value of the property</param>
            <remarks>
            <para>Requires an active script context.</para>
            <para>The property set will follow strict mode rules.</para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Set(Opportunity.ChakraBridge.UWP.JsSymbol,Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Sets an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="value">The value of the property</param>
            <remarks>
            <para>Requires an active script context.</para>
            <para>The property set will follow strict mode rules.</para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Set(System.String,Opportunity.ChakraBridge.UWP.JsValue,System.Boolean)">
            <summary>
            Sets an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="value">The new value of the property.</param>
            <param name="useStrictRules">The property set should follow strict mode rules.</param>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Set(Opportunity.ChakraBridge.UWP.JsSymbol,Opportunity.ChakraBridge.UWP.JsValue,System.Boolean)">
            <summary>
            Sets an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="value">The new value of the property.</param>
            <param name="useStrictRules">The property set should follow strict mode rules.</param>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.GetAt(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Gets the value at the specified index of an object.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="index">The index of the object.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="index" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.SetAt(Opportunity.ChakraBridge.UWP.JsValue,Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Sets the value at the specified index of an object.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="index">The index of the object.</param>
            <param name="value">The value of the property</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Remove(System.String)">
            <summary>
            Deletes an object's property.
            </summary>
            <remarks>
            <para>Requires an active script context.</para>
            <para>The property set will follow strict mode rules.</para>
            </remarks>
            <param name="id">The ID of the property.</param>
            <returns>Whether the property was deleted.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Remove(Opportunity.ChakraBridge.UWP.JsSymbol)">
            <summary>
            Deletes an object's property.
            </summary>
            <remarks>
            <para>Requires an active script context.</para>
            <para>The property set will follow strict mode rules.</para>
            </remarks>
            <param name="id">The ID of the property.</param>
            <returns>Whether the property was deleted.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Remove(System.String,System.Boolean)">
            <summary>
            Deletes an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="useStrictRules">The property set should follow strict mode rules.</param>
            <returns>Whether the property was deleted.</returns>
            <remarks> Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Remove(Opportunity.ChakraBridge.UWP.JsSymbol,System.Boolean)">
            <summary>
            Deletes an object's property.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="useStrictRules">The property set should follow strict mode rules.</param>
            <returns>Whether the property was deleted.</returns>
            <remarks> Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.RemoveAt(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Delete the value at the specified index of an object.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="index">The index to delete.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="index" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Add(System.String,Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Defines a new object's own property from a property descriptor.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="descriptor">The property descriptor.</param>
            <returns>Whether the property was defined.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Add(Opportunity.ChakraBridge.UWP.JsSymbol,Opportunity.ChakraBridge.UWP.JsObject)">
            <summary>
            Defines a new object's own property from a property descriptor.
            </summary>
            <param name="id">The ID of the property.</param>
            <param name="descriptor">The property descriptor.</param>
            <returns>Whether the property was defined.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.GetOwnPropertySymbols">
            <summary>
            Gets the list of all symbol properties on the object. 
            </summary>
            <returns>An array of property symbols. </returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.GetOwnPropertyNames">
            <summary>
            Gets the list of all properties on the object.
            </summary>
            <returns>An array of property names.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.GetOwnPropertyDescriptor(System.String)">
            <summary>
            Gets a property descriptor for an object's own property.
            </summary>
            <param name="propertyId">The ID of the property.</param>
            <returns>The property descriptor.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.GetOwnPropertyDescriptor(Opportunity.ChakraBridge.UWP.JsSymbol)">
            <summary>
            Gets a property descriptor for an object's own property.
            </summary>
            <param name="propertyId">The ID of the property.</param>
            <returns>The property descriptor.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.AddRef">
            <summary>
            Adds a reference to a garbage collected object. 
            </summary>
            <returns>The object's new reference count</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Release">
            <summary>
            Releases a reference to a garbage collected object. 
            </summary>
            <returns>The object's new reference count</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObject.Capture">
            <summary>
            Adds a reference to a garbage collected object. 
            </summary>
            <returns>A handle to release the reference.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsObjectBeforeCollectCallback">
            <summary>
            A callback called before collecting an object.
            </summary>
            <remarks>
            Use <c>JsSetObjectBeforeCollectCallback</c> to register this callback.
            </remarks>
            <param name="obj">The object to be collected.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsPropertyIdType">
            <summary>
            Type enumeration of a JavaScript property
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsPropertyIdType.String">
            <summary>
            Type enumeration of a JavaScript string property
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsPropertyIdType.Symbol">
            <summary>
            Type enumeration of a JavaScript symbol property
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes">
            <summary>
            Attributes of a runtime.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.None">
            <summary>
            No special attributes.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.DisableBackgroundWork">
            <summary>
            The runtime will not do any work (such as garbage collection) on background threads.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.AllowScriptInterrupt">
            <summary>
            The runtime should support reliable script interruption. This increases the number of
            places where the runtime will check for a script interrupt request at the cost of a
            small amount of runtime performance.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.EnableIdleProcessing">
            <summary>
            Host will call Idle, so enable idle processing. Otherwise, the runtime will manage
            memory slightly more aggressively.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.DisableNativeCodeGeneration">
            <summary>
            Runtime will not generate native code.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.DisableEval">
            <summary>
            Using Eval or Function constructor will throw an exception.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.EnableExperimentalFeatures">
            <summary>
            Runtime will enable all experimental features.
            </summary>
            
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsRuntimeAttributes.DispatchSetExceptionsToDebugger">
            <summary>
            Calling <c>JsSetException</c> will also dispatch the exception to the script debugger
            (if any) giving the debugger a chance to break on the exception.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsScriptException">
            <summary>
            A script exception.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsScriptException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,Opportunity.ChakraBridge.UWP.JsError)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsScriptException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="error">The JavaScript error object.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsScriptException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,Opportunity.ChakraBridge.UWP.JsError,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsScriptException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="error">The JavaScript error object.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsScriptException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsScriptException" /> class.
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The exception caused this exception.</param>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsScriptException.Error">
            <summary>
            Gets a JavaScript object representing the script error.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsScriptException.GetAndClearException">
            <summary>
            Returns the exception that caused the runtime of the current context to be in the 
            exception state and resets the exception state for that runtime.
            </summary>
            <remarks>
            <para>
            If the runtime of the current context is not in an exception state, this API will throw
            <c>JsErrorInvalidArgument</c>. If the runtime is disabled, this will return an exception
            indicating that the script was terminated, but it will not clear the exception (the 
            exception will be cleared if the runtime is re-enabled using 
            <c>EnableRuntimeExecution</c>).
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <returns>The exception for the runtime of the current context.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsScriptException.SetException(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Sets the runtime of the current context to an exception state.
            </summary>
            <remarks>
            <para>
            If the runtime of the current context is already in an exception state, this API will 
            throw <c>JsErrorInExceptionState</c>.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="error">
            The JavaScript exception to set for the runtime of the current context.
            </param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsScriptException.CreateFromContext(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String)">
            <summary>
            Gets a script exception by <see cref="M:Opportunity.ChakraBridge.UWP.Native.JsGetAndClearException(Opportunity.ChakraBridge.UWP.JsValueRef@)" />.
            </summary>
            <returns>
            A script exception of current context.
            </returns>
            <param name="code">The error code returned.</param>
            <param name="message">The error message used if no messege find from returned Js error object.</param>
            <exception cref="T:Opportunity.ChakraBridge.UWP.JsUsageException">The runtime of the current context is not in an exception state.</exception>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsThreadServiceCallbackPtr">
            <summary>
            A thread service callback.
            </summary>
            <remarks>
            The host can specify a background thread service when creating a runtime. If 
            specified, then background work items will be passed to the host using this callback. The
            host is expected to either begin executing the background work item immediately and return
            true or return false and the runtime will handle the work item in-thread.
            </remarks>
            <param name="callbackFunction">The callback for the background work item.</param>
            <param name="callbackData">The data argument to be passed to the callback.</param>
            <returns>Whether the thread service will execute the callback.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsBackgroundWorkItemCallbackPtr">
            <summary>
            A background work item callback.
            </summary>
            <remarks>
            This is passed to the host's thread service (if provided) to allow the host to 
            invoke the work item callback on the background thread of its choice.
            </remarks>
            <param name="callbackData">Data argument passed to the thread service.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsObjectAutoReleaseHandle">
            <summary>
            A handle to release the reference when closing.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsObjectAutoReleaseHandle.Object">
            <summary>
            The object that will this handle call <see cref="M:Opportunity.ChakraBridge.UWP.JsObject.Release" /> on.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObjectAutoReleaseHandle.Finalize">
            <summary>
            Releases a reference to a garbage collected object. 
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsObjectAutoReleaseHandle.Dispose">
            <summary>
            Releases a reference to a garbage collected object. 
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsString">
            <summary>
            A JavaScript string value.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsString.Length">
            <summary>
            Gets the length of a <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The length of the string.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsString.Value">
            <summary>
            Retrieves the string pointer of the <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value.
            </summary>
            <returns>The string.</returns>
            <remarks>
            <para>
            This function retrieves the string pointer of the <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value. It will fail with 
            <see cref="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument" /> if the type of the value is not <see cref="T:Opportunity.ChakraBridge.UWP.JsString" />.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsString.FromString(System.String)">
            <summary>
            Creates a <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value from a <see cref="T:System.String" />.
            </summary>
            <param name="stringValue">The <see cref="T:System.String" /> to convert to a <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value.</param>
            <returns>The new <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsString.ToString">
            <summary>
            Retrieves the string pointer of the <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value.
            </summary>
            <returns>The string.</returns>
            <remarks>
            <para>
            This function retrieves the string pointer of the <see cref="T:Opportunity.ChakraBridge.UWP.JsString" /> value. It will fail with 
            <see cref="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument" /> if the type of the value is not <see cref="T:Opportunity.ChakraBridge.UWP.JsString" />.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsSymbol">
            <summary>
            A JavaScript symbol value.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSymbol.Create(Opportunity.ChakraBridge.UWP.JsString)">
            <summary>
            Creates a JavaScript symbol. 
            </summary>
            <param name="description">The string description of the symbol. Can be <see langword="null" />.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsSymbol.ToString">
            <summary>
            Get the debug string of <see cref="T:Opportunity.ChakraBridge.UWP.JsSymbol" />. Will invoke <c>Symbol.prototype.toString()</c>
            </summary>
            <returns>The debug string of <see cref="T:Opportunity.ChakraBridge.UWP.JsSymbol" />.</returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsTypedArray">
            <summary>
            A Javascript typed array.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsTypedArray.ArrayType">
            <summary>
            Gets the type of array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArray.Buffer">
            <summary>
            Buffer pointer of the array data.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArray.BufferLength">
            <summary>
            Length if buffer in bytes.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsTypedArrayType">
            <summary>
            The type of a typed JavaScript array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Int8">
            <summary>
            An int8 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Uint8">
            <summary>
            An uint8 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Uint8Clamped">
            <summary>
            An uint8 clamped array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Int16">
            <summary>
            An int16 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Uint16">
            <summary>
            An uint16 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Int32">
            <summary>
            An int32 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Uint32">
            <summary>
            An uint32 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Float32">
            <summary>
            A float32 array.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsTypedArrayType.Float64">
            <summary>
            A float64 array.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsUsageException">
            <summary>
            An API usage exception occurred.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUsageException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsUsageException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUsageException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsUsageException" /> class. 
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUsageException.#ctor(Opportunity.ChakraBridge.UWP.JsErrorCode,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsUsageException" /> class.
            </summary>
            <param name="code">The error code returned.</param>
            <param name="message">The error message.</param>
            <param name="innerException">The exception caused this exception.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsUndefined">
            <summary>
            A JavaScript undefined value.
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsUndefined.ToString">
            <summary>
            Returns <c>"undefined"</c>.
            </summary>
            <returns><c>"undefined"</c></returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsValue">
            <summary>
            A JavaScript value.
            </summary>
            <remarks>
            A JavaScript value is one of the following types of values: Undefined, Null, Boolean, 
            String, Number, or Object.
            </remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.True">
            <summary>
            Gets the value of <c>true</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.False">
            <summary>
            Gets the value of <c>false</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.Undefined">
            <summary>
            Gets the value of <c>undefined</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.Null">
            <summary>
            Gets the value of <c>null</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.GlobalObject">
            <summary>
            Gets the global object in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.Create(System.Object)">
            <summary>
            Creates a JavaScript value that is a projection of the passed in IInspectable pointer. 
            </summary>
            <param name="inspectable">A IInspectable to be projected. </param>
            <returns>A JavaScript value that is a projection of the IInspectable. </returns>
            <remarks><para>The projected value can be used by script to call a WinRT object. Hosts are responsible for enforcing COM threading rules. </para>
            <para>Requires an active script context. </para></remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.ToInspectable">
            <summary>
            Unwraps a JavaScript object to an IInspectable pointer 
            </summary>
            <returns>An IInspectable value of the object. </returns>
            <remarks><para>Hosts are responsible for enforcing COM threading rules. </para>
            <para>Requires an active script context. </para></remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.ValueType">
            <summary>
            Gets the JavaScript type of the value.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The type of the value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.ToJsBoolean">
            <summary>
            Converts the value to <c>Boolean</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.ToJsNumber">
            <summary>
            Converts the value to <c>Number</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.ToJsString">
            <summary>
            Converts the value to <c>String</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.ToJsObject">
            <summary>
            Converts the value to <c>Object</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.JsEquals(Opportunity.ChakraBridge.UWP.JsValue,Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Compare two JavaScript values for equality.
            </summary>
            <remarks>
            <para>
            This function is equivalent to the "==" operator in JavaScript.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <returns>Whether the values are equal.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.JsStrictEquals(Opportunity.ChakraBridge.UWP.JsValue,Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Compare two JavaScript values for strict equality.
            </summary>
            <remarks>
            <para>
            This function is equivalent to the "===" operator in JavaScript.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <returns>Whether the values are strictly equal.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.JsEqualsTo(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Compare two JavaScript values for equality.
            </summary>
            <remarks>
            <para>
            This function is equivalent to the "==" operator in JavaScript.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="other">The object to compare.</param>
            <returns>Whether the values are equal.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.JsStrictEqualsTo(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Compare two JavaScript values for strict equality.
            </summary>
            <remarks>
            <para>
            This function is equivalent to the "===" operator in JavaScript.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="other">The object to compare.</param>
            <returns>Whether the values are strictly equal.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.Equals(Opportunity.ChakraBridge.UWP.JsValue)">
            <summary>
            Compare reference of two <see cref="T:Opportunity.ChakraBridge.UWP.JsValue" />s.
            </summary>
            <param name="other">Another object to compare.</param>
            <returns><see langword="true" /> if <paramref name="other" /> is <see cref="T:Opportunity.ChakraBridge.UWP.JsValue" /> that has the same reference with this object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.Equals(System.Object)">
            <summary>
            Compare reference of two <see cref="T:Opportunity.ChakraBridge.UWP.JsValue" />s.
            </summary>
            <param name="obj">Another object to compare.</param>
            <returns><see langword="true" /> if <paramref name="obj" /> is <see cref="T:Opportunity.ChakraBridge.UWP.JsValue" /> that has the same reference with this object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValue.GetHashCode">
            <summary>
            Gets hash code of the reference.
            </summary>
            <returns>The hash code of the reference.</returns>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValue.Context">
            <summary>
            Gets the script context that the object belongs to. 
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValueRef.Invalid">
            <summary>
            Gets an invalid value.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValueRef.IsValid">
            <summary>
            Gets a value indicating whether the value is valid.
            </summary>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.JsValueRef.Context">
            <summary>
            Gets the script context that the object belongs to. 
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValueRef.AddRef">
            <summary>
            Adds a reference to a garbage collected object. 
            </summary>
            <returns>The object's new reference count</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValueRef.Release">
            <summary>
            Releases a reference to a garbage collected object. 
            </summary>
            <returns>The object's new reference count</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.JsValueRef.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of the <see cref="T:Opportunity.ChakraBridge.UWP.JsValueRef" /> struct.
            </summary>
            <param name="value">The reference.</param>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsValueType">
            <summary>
            The JavaScript type of a JsValue.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Undefined">
            <summary>
            The value is the <c>undefined</c> value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Null">
            <summary>
            The value is the <c>null</c> value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Number">
            <summary>
            The value is a JavaScript number value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.String">
            <summary>
            The value is a JavaScript string value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Boolean">
            <summary>
            The value is a JavaScript Boolean value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Object">
            <summary>
            The value is a JavaScript object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Function">
            <summary>
            The value is a JavaScript function object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Error">
            <summary>
            The value is a JavaScript error object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Array">
            <summary>
            The value is a JavaScript array object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.Symbol">
            <summary>
            The value is a JavaScript symbol object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.ArrayBuffer">
            <summary>
            The value is a JavaScript ArrayBuffer object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.TypedArray">
            <summary>
            The value is a JavaScript typed array object value.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.JsValueType.DataView">
            <summary>
            The value is a JavaScript DataView object value.
            </summary>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.Native">
            <summary>
            Native interfaces.
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.Native.JS_INVALID_PROPERTYID">
            <summary>
            An invalid property identifier. 
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.Native.JS_INVALID_REFERENCE">
            <summary>
            An invalid reference. 
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.Native.JS_INVALID_RUNTIME_HANDLE">
            <summary>
            An invalid runtime handle. 
            </summary>
        </member>
        <member name="F:Opportunity.ChakraBridge.UWP.Native.JS_SOURCE_CONTEXT_NONE">
            <summary>
            An empty source context. 
            </summary>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsCreateRuntime(Opportunity.ChakraBridge.UWP.JsRuntimeAttributes,Opportunity.ChakraBridge.UWP.JsThreadServiceCallbackPtr,Opportunity.ChakraBridge.UWP.JsRuntimeHandle@)">
            <summary>
            Creates a new runtime.
            </summary>
            <param name="attributes">The attributes of the runtime to be created.</param>
            <param name="threadService">The thread service for the runtime. Can be null.</param>
            <param name="runtime">The runtime created.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsSetRuntimeMemoryAllocationCallback(Opportunity.ChakraBridge.UWP.JsRuntimeHandle,System.IntPtr,Opportunity.ChakraBridge.UWP.JsMemoryAllocationCallbackPtr)">
            <summary>
            Sets a memory allocation callback for specified runtime
            </summary>
            <remarks>
            <para>
            Registering a memory allocation callback will cause the runtime to call back to the host 
            whenever it acquires memory from, or releases memory to, the OS. The callback routine is
            called before the runtime memory manager allocates a block of memory. The allocation will
            be rejected if the callback returns false. The runtime memory manager will also invoke the
            callback routine after freeing a block of memory, as well as after allocation failures. 
            </para>
            <para>
            The callback is invoked on the current runtime execution thread, therefore execution is 
            blocked until the callback completes.
            </para>
            <para>
            The return value of the callback is not stored; previously rejected allocations will not
            prevent the runtime from invoking the callback again later for new memory allocations.
            </para>
            </remarks>
            <param name="runtime"></param>
            <param name="callbackState">
            User provided state that will be passed back to the callback.
            </param>
            <param name="allocationCallback">
            Memory allocation callback to be called for memory allocation events.
            </param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsSetRuntimeBeforeCollectCallback(Opportunity.ChakraBridge.UWP.JsRuntimeHandle,System.IntPtr,Opportunity.ChakraBridge.UWP.JsBeforeCollectCallbackPtr)">
            <summary>
            Sets a callback function that is called by the runtime before garbage collection.
            </summary>
            <remarks>
            <para>
            The callback is invoked on the current runtime execution thread, therefore execution is 
            blocked until the callback completes.
            </para>
            <para>
            The callback can be used by hosts to prepare for garbage collection. For example, by 
            releasing unnecessary references on Chakra objects.
            </para>
            </remarks>
            <param name="runtime"></param>
            <param name="callbackState">
            User provided state that will be passed back to the callback.
            </param>
            <param name="beforeCollectCallback">The callback function being set.</param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsContextAddRef(Opportunity.ChakraBridge.UWP.JsContextRef,System.UInt32@)">
            <summary>
            Adds a reference to a script context.
            </summary>
            <remarks>
            Calling AddRef ensures that the context will not be freed until Release is called.
            </remarks>
            <returns>The object's new reference count.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsAddRef(Opportunity.ChakraBridge.UWP.JsValueRef,System.UInt32@)">
            <summary>
            Adds a reference to the object.
            </summary>
            <remarks>
            This only needs to be called on objects that are not going to be stored somewhere on 
            the stack. Calling AddRef ensures that the JavaScript object the value refers to will not be freed 
            until Release is called
            </remarks>
            <returns>The object's new reference count.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsContextRelease(Opportunity.ChakraBridge.UWP.JsContextRef,System.UInt32@)">
            <summary>
            Releases a reference to a script context.
            </summary>
            <remarks>
            Removes a reference to a context that was created by AddRef.
            </remarks>
            <returns>The object's new reference count.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsRelease(Opportunity.ChakraBridge.UWP.JsValueRef,System.UInt32@)">
            <summary>
            Releases a reference to the object.
            </summary>
            <remarks>
            Removes a reference that was created by AddRef.
            </remarks>
            <returns>The object's new reference count.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsSetException(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Sets the runtime of the current context to an exception state.
            </summary>
            <remarks>
            <para>
            If the runtime of the current context is already in an exception state, this API will 
            throw <c>JsErrorInExceptionState</c>.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <param name="exception">
            The JavaScript exception to set for the runtime of the current context.
            </param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.Native.JsSetObjectBeforeCollectCallback(Opportunity.ChakraBridge.UWP.JsValueRef,System.IntPtr,Opportunity.ChakraBridge.UWP.JsObjectBeforeCollectCallbackPtr)">
            <summary>
            Sets a callback function that is called by the runtime before garbage collection of an object. 
            </summary>
            <param name="reference"></param>
            <param name="callbackState"></param>
            <param name="beforeCollectCallback">The callback function being set. Use <see langword="null" /> to clear previously registered callback. </param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawArray.Create(System.Int32)">
            <summary>
            Creates a JavaScript array object.
            </summary>
            <param name="length">The initial length of the array.</param>
            <returns>The new array object.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawArray.CreateTyped(Opportunity.ChakraBridge.UWP.JsTypedArrayType,Opportunity.ChakraBridge.UWP.JsValueRef,System.UInt32,System.UInt32)">
            <summary>
            Creates a JavaScript typed array object. 
            </summary>
            <param name="arrayType">The type of the array to create. </param>
            <param name="arrayBuffer">The base array of the new array. Use <see cref="F:Opportunity.ChakraBridge.UWP.Native.JS_INVALID_REFERENCE" /> if no base array. </param>
            <param name="byteOffset">The offset in bytes from the start of <paramref name="arrayBuffer" /> for result typed array to reference. 
            Only applicable when baseArray is an ArrayBuffer object. Must be 0 otherwise. </param>
            <param name="elementLength">The number of elements in the array.
            Only applicable when creating a new typed array without baseArray (baseArray is <see cref="F:Opportunity.ChakraBridge.UWP.Native.JS_INVALID_REFERENCE" />) or when baseArray is an ArrayBuffer object. Must be 0 otherwise. </param>
            <returns></returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawArray.GetTypedArrayInfo(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef@,System.UInt32@,System.UInt32@)">
            <summary>
            Obtains frequently used properties of a typed array.
            </summary>
            <param name="typedArray">The typed array instance. </param>
            <param name="arrayBuffer">The <c>ArrayBuffer</c> backstore of the array. </param>
            <param name="byteOffset">The offset in bytes from the start of arrayBuffer referenced by the array. </param>
            <param name="byteLength">The number of bytes in the array. </param>
            <returns>The type of the array. </returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawBoolean.ToBoolean(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Retrieves the bool value of a <c>Boolean</c> value. 
            </summary>
            <returns>The converted value. </returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawBoolean.FromBoolean(System.Boolean)">
            <summary>
            Creates a <c>Boolean</c> value from a <c>bool</c> value.
            </summary>
            <param name="value">The value to be converted.</param>
            <returns>The converted value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawError.CreateError(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a new JavaScript error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawError.CreateRangeError(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a new JavaScript RangeError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawError.CreateReferenceError(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a new JavaScript ReferenceError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawError.CreateSyntaxError(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a new JavaScript SyntaxError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawError.CreateTypeError(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a new JavaScript TypeError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawError.CreateUriError(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a new JavaScript URIError error object
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="message">Message for the error object.</param>
            <returns>The new error object.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawFuction.Invoke(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef[])">
            <summary>
            Invokes a function.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="callee">The function.</param>
            <param name="caller">The caller of function.</param>
            <param name="arguments">The arguments to the call.</param>
            <returns>The <c>Value</c> returned from the function invocation, if any.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawFuction.New(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef[])">
            <summary>
            Invokes a function as a constructor.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="callee">The function.</param>
            <param name="arguments">The arguments to the call.</param>
            <returns>The <c>Value</c> returned from the function invocation.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawNumber.ToInt32(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Retrieves the <see cref="T:System.Int32" /> value of a number value.
            </summary>
            <param name="numberRef">The number value to convert to an <see cref="T:System.Int32" /> value.</param>
            <returns>The <see cref="T:System.Int32" /> value.</returns>
            <remarks>
            This function retrieves the value of a number value and converts to an <see cref="T:System.Int32" /> value.
            It will fail with <see cref="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument" /> if the type of the value is not number.
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawNumber.ToDouble(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Retrieves the <see cref="T:System.Double" /> value of a number value.
            </summary>
            <param name="numberRef">The number value to convert to a <see cref="T:System.Double" /> value.</param>
            <returns>The <see cref="T:System.Double" /> value.</returns>
            <remarks>
            This function retrieves the value of a number value. It will fail with
            <see cref="F:Opportunity.ChakraBridge.UWP.JsErrorCode.InvalidArgument" /> if the type of the value is not number.
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawNumber.FromDouble(System.Double)">
            <summary>
            Creates a <c>Number</c> value from a <c>double</c> value.
            </summary>
            <param name="value">The value to be converted.</param>
            <returns>The new <c>Number</c> value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawNumber.FromInt32(System.Int32)">
            <summary>
            Creates a <c>Number</c> value from a <c>int</c> value.
            </summary>
            <param name="value">The value to be converted.</param>
            <returns>The new <c>Number</c> value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawObject.PreventExtension(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Sets an object to not be extensible.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawObject.IsExtensionAllowed(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Gets a value indicating whether an object is extensible or not.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawObject.InstanceOf(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Performs JavaScript "instanceof" operator test. 
            </summary>
            <param name="objRef">The object.</param>
            <param name="constructorRef">The constructor function to test against. </param>
            <returns>Whether the "objRef instanceof constructorRef" is <see langword="true" />. </returns>
        </member>
        <member name="T:Opportunity.ChakraBridge.UWP.JsObjectFinalizeCallbackPtr">
            <summary>
            A finalization callback.
            </summary>
            <param name="data">
            The external data that was passed in when creating the object being finalized.
            </param>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawOperator.ToJsBoolean(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Converts the value to <c>Boolean</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawOperator.ToJsNumber(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Converts the value to <c>Number</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawOperator.ToJsString(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Converts the value to <c>String</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawOperator.ToJsObject(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Converts the value to <c>Object</c> using regular JavaScript semantics.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawOperator.Equals(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Compare two JavaScript values for equality.
            </summary>
            <remarks>
            <para>
            This function is equivalent to the "==" operator in JavaScript.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <returns>Whether the values are equal.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawOperator.StrictEquals(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Compare two JavaScript values for strict equality.
            </summary>
            <remarks>
            <para>
            This function is equivalent to the "===" operator in JavaScript.
            </para>
            <para>
            Requires an active script context.
            </para>
            </remarks>
            <returns>Whether the values are strictly equal.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.GetProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsPropertyId)">
            <summary>
            Gets an object's property.
            </summary>
            <param name="obj">The object.</param>
            <param name="id">The ID of the property.</param>
            <returns>The value of the property.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.SetProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsPropertyId,Opportunity.ChakraBridge.UWP.JsValueRef,System.Boolean)">
            <summary>
            Sets an object's property.
            </summary>
            <param name="obj">The object.</param>
            <param name="id">The ID of the property.</param>
            <param name="value">The new value of the property.</param>
            <param name="useStrictRules">The property set should follow strict mode rules.</param>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.DefineProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsPropertyId,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Defines a new object's own property from a property descriptor.
            </summary>
            <param name="obj">The object.</param>
            <param name="id">The ID of the property.</param>
            <param name="propertyDescriptor">The property descriptor.</param>
            <returns>Whether the property was defined.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.DeleteProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsPropertyId,System.Boolean)">
            <summary>
            Deletes an object's property.
            </summary>
            <param name="obj">The object.</param>
            <param name="id">The ID of the property.</param>
            <param name="useStrictRules">The property set should follow strict mode rules.</param>
            <returns>Whether the property was deleted.</returns>
            <remarks>
            <para>Requires an active script context.</para>
            <para>The property set will follow strict mode rules.</para>
            </remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.HasProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsPropertyId)">
            <summary>
            Determines whether an object has a property.
            </summary>
            <param name="obj">The object.</param>
            <param name="id">The ID of the property.</param>
            <returns>Whether the object (or a prototype) has the property.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.HasIndexedProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Test if an object has a value at the specified index.
            </summary>
            <param name="obj">The object.</param>
            <param name="index">The index to test.</param>
            <returns>Whether the object has an value at the specified index.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.GetIndexedProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Retrieve the value at the specified index of an object.
            </summary>
            <param name="obj">The object.</param>
            <param name="index">The index to retrieve.</param>
            <returns>The retrieved value.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.SetIndexedProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Set the value at the specified index of an object.
            </summary>
            <param name="obj">The object.</param>
            <param name="index">The index to set.</param>
            <param name="value">The value to set.</param>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.DeleteIndexedProperty(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Delete the value at the specified index of an object.
            </summary>
            <param name="obj">The object.</param>
            <param name="index">The index to delete.</param>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.GetOwnPropertySymbols(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Gets the list of all symbol properties on the object. 
            </summary>
            <param name="obj">The object.</param>
            <returns>An array of property symbols. </returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.GetOwnPropertyNames(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Gets the list of all properties on the object.
            </summary>
            <param name="obj">The object.</param>
            <returns>An array of property names.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawProperty.GetOwnPropertyDescriptor(Opportunity.ChakraBridge.UWP.JsValueRef,Opportunity.ChakraBridge.UWP.JsPropertyId)">
            <summary>
            Gets a property descriptor for an object's own property.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyId">The ID of the property.</param>
            <returns>The property descriptor.</returns>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawString.GetStringLength(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Gets the length of a <c>String</c> value.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <returns>The length of the string.</returns>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawString.FromString(System.String)">
            <summary>
            Creates a <c>String</c> value from a string pointer.
            </summary>
            <remarks>Requires an active script context.</remarks>
            <param name="value">The string  to convert to a <c>String</c> value.</param>
            <returns>The new <c>String</c> value.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawSymbol.CreateSymbol(Opportunity.ChakraBridge.UWP.JsValueRef)">
            <summary>
            Creates a JavaScript symbol. 
            </summary>
            <param name="description">The string description of the symbol. Can be null. </param>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.RawValue.Undefined">
            <summary>
            Gets the value of <c>undefined</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.RawValue.Null">
            <summary>
            Gets the value of <c>null</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.RawValue.GlobalObject">
            <summary>
            Gets the global object in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.RawValue.True">
            <summary>
            Gets the value of <c>true</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="P:Opportunity.ChakraBridge.UWP.RawValue.False">
            <summary>
            Gets the value of <c>false</c> in the current script context.
            </summary>
            <remarks>Requires an active script context.</remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawValue.FromInspectable(System.Object)">
            <summary>
            Creates a JavaScript value that is a projection of the passed in IInspectable pointer. 
            </summary>
            <param name="inspectable">A IInspectable to be projected. </param>
            <returns>A JavaScript value that is a projection of the IInspectable. </returns>
            <remarks><para>The projected value can be used by script to call a WinRT object. Hosts are responsible for enforcing COM threading rules. </para>
            <para>Requires an active script context. </para></remarks>
        </member>
        <member name="M:Opportunity.ChakraBridge.UWP.RawValue.ToInspectable(Opportunity.ChakraBridge.UWP.JsValueRef,System.Object@)">
            <summary>
            Unwraps a JavaScript object to an IInspectable pointer 
            </summary>
            <param name="obj">A JavaScript value that should be projected to IInspectable. </param>
            <param name="inspectable">An IInspectable value of the object. </param>
            <remarks><para>Hosts are responsible for enforcing COM threading rules. </para>
            <para>Requires an active script context. </para></remarks>
        </member>
    </members>
</doc>
